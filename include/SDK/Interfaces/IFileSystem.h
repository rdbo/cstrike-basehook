class IFileSystem : public IBaseInterface {
  public:
    virtual void Mount(void);
    virtual void Unmount(void);
    virtual void RemoveAllSearchPaths(void);
    virtual void AddSearchPath(const char *, const char *);
    virtual bool RemoveSearchPath(const char *);
    virtual void RemoveFile(const char *, const char *);
    virtual void CreateDirHierarchy(const char *, const char *);
    virtual bool FileExists(const char *);
    virtual bool IsDirectory(const char *);
    virtual FileHandle_t Open(const char *, const char *, const char *);
    virtual void Close(FileHandle_t);
    virtual void Seek(FileHandle_t, int, FileSystemSeek_t);
    virtual unsigned int Tell(FileHandle_t);
    virtual unsigned int Size(FileHandle_t);
    virtual unsigned int Size(const char *);
    virtual long GetFileTime(const char *);
    virtual void FileTimeToString(char *, int, long);
    virtual bool IsOk(FileHandle_t);
    virtual void Flush(FileHandle_t);
    virtual bool EndOfFile(FileHandle_t);
    virtual int Read(void *, int, FileHandle_t);
    virtual int Write(const void *, int, FileHandle_t);
    virtual char * ReadLine(char *, int, FileHandle_t);
    virtual int FPrintf(FileHandle_t, char *, ...);
    virtual void * GetReadBuffer(FileHandle_t, int *, bool);
    virtual void ReleaseReadBuffer(FileHandle_t, void *);
    virtual const char * FindFirst(const char *, FileFindHandle_t *, const char *);
    virtual const char * FindNext(FileFindHandle_t);
    virtual bool FindIsDirectory(FileFindHandle_t);
    virtual void FindClose(FileFindHandle_t);
    virtual void GetLocalCopy(const char *);
    virtual const char * GetLocalPath(const char *, char *, int);
    virtual char * ParseFile(char *, char *, bool *);
    virtual bool FullPathToRelativePath(const char *, char *);
    virtual bool GetCurrentDirectory(char *, int);
    virtual void PrintOpenedFiles(void);
    virtual void SetWarningFunc(void (*)(const char *, ...));
    virtual void SetWarningLevel(FileWarningLevel_t);
    virtual void LogLevelLoadStarted(const char *);
    virtual void LogLevelLoadFinished(const char *);
    virtual int HintResourceNeed(const char *, int);
    virtual int PauseResourcePreloading(void);
    virtual int ResumeResourcePreloading(void);
    virtual int SetVBuf(FileHandle_t, char *, int, long);
    virtual void GetInterfaceVersion(char *, int);
    virtual bool IsFileImmediatelyAvailable(const char *);
    virtual WaitForResourcesHandle_t WaitForResources(const char *);
    virtual bool GetWaitForResourcesProgress(WaitForResourcesHandle_t, float *, bool *);
    virtual void CancelWaitForResources(WaitForResourcesHandle_t);
    virtual bool IsAppReadyForOfflinePlay(int);
    virtual bool AddPackFile(const char *, const char *);
    virtual FileHandle_t OpenFromCacheForRead(const char *, const char *, const char *);
    virtual void AddSearchPathNoWrite(const char *, const char *);
};